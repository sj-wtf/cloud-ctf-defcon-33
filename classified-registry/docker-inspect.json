[
     {
          "Id": "b6d191eaeaf8c0bc9eba9dbcf803995f235c5dbc7a2947c542387a9247a49895",
          "Digest": "sha256:319c249f0a209b690d73b6f543a2a5290cc14d59a2822b4063472ba5e64bee42",
          "RepoTags": [
               "us-west4-docker.pkg.dev/classified-registry-dc33/classified-registry/hexnova:latest"
          ],
          "RepoDigests": [
               "us-west4-docker.pkg.dev/classified-registry-dc33/classified-registry/hexnova@sha256:319c249f0a209b690d73b6f543a2a5290cc14d59a2822b4063472ba5e64bee42"
          ],
          "Parent": "",
          "Comment": "",
          "Created": "2025-07-28T18:18:27.21473491-07:00",
          "Config": {
               "ExposedPorts": {
                    "80/tcp": {}
               },
               "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.29.0",
                    "PKG_RELEASE=1",
                    "DYNPKG_RELEASE=1",
                    "NJS_VERSION=0.9.0",
                    "NJS_RELEASE=1",
                    "MY_ENV_VAR=FLAG-{zDAkRWAi4znMkIhjaqZnU2T264XG2fPQ}"
               ],
               "Entrypoint": [
                    "/docker-entrypoint.sh"
               ],
               "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
               ],
               "WorkingDir": "/",
               "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
               },
               "StopSignal": "SIGQUIT",
               "ArgsEscaped": true
          },
          "Version": "",
          "Author": "",
          "Architecture": "amd64",
          "Os": "linux",
          "Size": 53879403,
          "VirtualSize": 53879403,
          "GraphDriver": {
               "Name": "overlay",
               "Data": {
                    "LowerDir": "/var/lib/containers/storage/overlay/76d58ab67d4e93aa1054cf4d089685a2a77d6f1717fba39d6f57b6f9685c47d0/diff:/var/lib/containers/storage/overlay/ebcdf2a530ca6f4a8369806d69dd1469fb3acdc90cc4fc0db94b667149488985/diff:/var/lib/containers/storage/overlay/0fb0f7c224f80c5318b9402860aee12107ff27a9e039d63abdae5b1ea7237e19/diff:/var/lib/containers/storage/overlay/4ab1d49a4c8f83ec34ce4e78565cb9a97ccea978fdd00785041da43cc8accfd1/diff:/var/lib/containers/storage/overlay/6866cf51c42338e58b34da103494e56855d2f9e1463ef25ab32b820f58710d0b/diff:/var/lib/containers/storage/overlay/0e1df81ffb31e735b073999dda6d0391a8c38bbcb3455cc6b0240a2fb5b790f2/diff:/var/lib/containers/storage/overlay/085740df09d56aae4241b4f698c474b46e538f2729890ad5e443957c31dc2904/diff:/var/lib/containers/storage/overlay/418dccb7d85a63a6aa574439840f7a6fa6fd2321b3e2394568a317735e867d35/diff",
                    "UpperDir": "/var/lib/containers/storage/overlay/54e5f436147a35519514a4e41f40cf66c4477dd8f5b8ae012dab96267b99dd19/diff",
                    "WorkDir": "/var/lib/containers/storage/overlay/54e5f436147a35519514a4e41f40cf66c4477dd8f5b8ae012dab96267b99dd19/work"
               }
          },
          "RootFS": {
               "Type": "layers",
               "Layers": [
                    "sha256:418dccb7d85a63a6aa574439840f7a6fa6fd2321b3e2394568a317735e867d35",
                    "sha256:77a17eed5d29463213a63982741960f73ade62996f3698bab41c93ccf3e83e5f",
                    "sha256:430a7aa99a19d9993d7147098f48e6f3f31bf8c24d7f78327e79245583eae8f6",
                    "sha256:95a6190cfaec8aa82732270f3414a69f1bdb86e72c148955cff2be340c857164",
                    "sha256:daa8ffa7606a8b98117b003ab8ea55fbf3b2f0f194bc8bbfcddf25f0693d829e",
                    "sha256:26081059fc81095e0105c664ad6da55596ab0f6e92966f518c5b23016c6d59a3",
                    "sha256:c38bee0b0d2864c1661486dcbdfe08e5980cfa8b61c11682bd0cd95c3ba589f8",
                    "sha256:57fb2e22a07aa9afdaac0a491c3b5a0948a4ea577aeaa99b5d1fa0cc9ece277b",
                    "sha256:216c3bb0c06ea5b5df15a3a588d3519ed7244d59dfcf8ef630e3104b39078f02"
               ]
          },
          "Labels": {
               "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
          },
          "Annotations": {},
          "ManifestType": "application/vnd.docker.distribution.manifest.v2+json",
          "User": "",
          "History": [
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "ADD alpine-minirootfs-3.22.1-x86_64.tar.gz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "CMD [\"/bin/sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "ENV NGINX_VERSION=1.29.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "ENV DYNPKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils                 curl             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"400593da45fc0195a01138c0c23a06059da1c6a2e26959f2c4c95fbaf63436ff211665ef01392d2b775a0133d5b57680dabe51b840a55f82e89621e84cf651d1 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache gettext-envsubst     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "ENV NJS_VERSION=0.9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "ENV NJS_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-06-24T20:52:14Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils                 curl             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"400593da45fc0195a01138c0c23a06059da1c6a2e26959f2c4c95fbaf63436ff211665ef01392d2b775a0133d5b57680dabe51b840a55f82e89621e84cf651d1 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
               },
               {
                    "created": "2025-07-28T18:18:27.21473491-07:00",
                    "created_by": "COPY app/ /usr/share/nginx/html/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
               },
               {
                    "created": "2025-07-28T18:18:27.21473491-07:00",
                    "created_by": "ARG MY_ARG=FLAG-{zDAkRWAi4znMkIhjaqZnU2T264XG2fPQ}",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-07-28T18:18:27.21473491-07:00",
                    "created_by": "ENV MY_ENV_VAR=FLAG-{zDAkRWAi4znMkIhjaqZnU2T264XG2fPQ}",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               },
               {
                    "created": "2025-07-28T18:18:27.21473491-07:00",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
               }
          ],
          "NamesHistory": [
               "us-west4-docker.pkg.dev/classified-registry-dc33/classified-registry/hexnova:latest"
          ]
     }
]
